
pipeline {
    agent none
    options {
      gitLabConnection('gitlab-connection')
    }

    stages {
        stage("Android build & deploy + Spring CI") {
            parallel{
                stage('only master for android'){
                    when{
                        branch 'isak';
                    }
                    node('slave1'){
                        steps{
                            updateGitlabCommitStatus name: 'build', state: 'running'
                            build(
                                echo "${env.BRANCH_NAME} ->  Android running"

                                job: "Dev-Android-pipeline", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }
                }
                stage('only master for infra'){
                    when{
                        branch 'isak';
                    }
                    node('slave2'){
                        steps{
                            updateGitlabCommitStatus name: 'build', state: 'running'
                            echo "${env.BRANCH_NAME} ->  spring CI running"
                            build(
                                job: "POD-CI-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }
                }
                stage('maryfarm-board-service'){
                    when{
                        branch 'maryfarm-board-service'
                    }
                    node('slave2'){
                        steps {
                            updateGitlabCommitStatus name: 'build', state: 'running'
                            build(
                                job: "POD-CI-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }

                }
                stage("maryfarm-calendar-service") {
                    when{
                        branch 'maryfarm-calendar-service'
                    }
                    node('slave2'){
                        steps {
                            updateGitlabCommitStatus name: 'build', state: 'running'
                            build(
                                job: "POD-CI-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }

                }
                stage("maryfarm-chat-service") {
                    when{
                        branch 'maryfarm-chat-service'
                    }
                    node('slave2'){
                        steps {
                            updateGitlabCommitStatus name: 'build', state: 'running'
                            build(
                                job: "POD-CI-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }
                }
                stage("maryfarm-notify-service") {
                    when{
                        branch 'maryfarm-notify-service'
                    }
                    node('slave2'){
                        steps {
                            updateGitlabCommitStatus name: 'build', state: 'running'
                            build(
                                job: "POD-CI-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }
                }
                stage("maryfarm-plant-service") {
                    when{
                        branch 'maryfarm-plant-service'
                    }
                    node('slave2'){
                        steps {
                            updateGitlabCommitStatus name: 'build', state: 'running'
                            build(
                                job: "POD-CI-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }
                }
                stage("maryfarm-user-service") {
                    when{
                        branch 'maryfarm-user-service'
                    }
                    node('slave2'){
                        steps {
                            updateGitlabCommitStatus name: 'build', state: 'running'
                            build(
                                job: "POD-CI-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }
                }
                stage("maryfarm-consumer-service") {
                    when{
                        branch 'maryfarm-consumer-service'
                    }
                    node('slave2'){
                        steps {
                            updateGitlabCommitStatus name: 'build', state: 'running'
                            build(
                                job: "POD-CI-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }
                }
            }
        }
        stage("Spring CD") {
            stage('only master for infra'){
                when{
                    branch 'master';
                }
                steps{
                    updateGitlabCommitStatus name: 'build', state: 'running'
                    echo "${env.BRANCH_NAME} ->  spring CD running"
                    build(
                        job: "POD-CD-Pipeline-AWS", 
                        parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                    )
                }
            }
            stage('maryfarm-board-service'){
                when{
                    branch 'maryfarm-board-service'
                }
                node('slave2'){
                    steps {
                        updateGitlabCommitStatus name: 'build', state: 'running'
                        build(
                            job: "POD-CD-Pipeline-AWS", 
                            parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                        )
                    }
                }

            }
            stage("maryfarm-calendar-service") {
                when{
                    branch 'maryfarm-calendar-service'
                }
                node('slave2'){
                    steps {
                        updateGitlabCommitStatus name: 'build', state: 'running'
                        build(
                            job: "POD-CD-Pipeline-AWS", 
                            parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                        )
                    }
                }

            }
            stage("maryfarm-chat-service") {
                when{
                    branch 'maryfarm-chat-service'
                }
                node('slave2'){
                    steps {
                        updateGitlabCommitStatus name: 'build', state: 'running'
                        build(
                            job: "POD-CD-Pipeline-AWS", 
                            parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                        )
                    }
                }

            }
            stage("maryfarm-notify-service") {
                when{
                    branch 'maryfarm-notify-service'
                }
                node('slave2'){
                    steps {
                        updateGitlabCommitStatus name: 'build', state: 'running'
                        build(
                            job: "POD-CD-Pipeline-AWS", 
                            parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                        )
                    }
                }

            }
            stage("maryfarm-plant-service") {
                when{
                    branch 'maryfarm-plant-service'
                }
                node('slave2'){
                    steps {
                        updateGitlabCommitStatus name: 'build', state: 'running'
                        build(
                            job: "POD-CD-Pipeline-AWS", 
                            parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                        )
                    }
                }

            }
            stage("maryfarm-user-service") {
                when{
                    branch 'maryfarm-user-service'
                }
                node('slave2'){
                    steps {
                        updateGitlabCommitStatus name: 'build', state: 'running'
                        build(
                            job: "POD-CD-Pipeline-AWS", 
                            parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                        )
                    }
                }

            }
            stage("maryfarm-consumer-service") {
                when{
                    branch 'maryfarm-consumer-service'
                }
                node('slave2'){
                    steps {
                        updateGitlabCommitStatus name: 'build', state: 'running'
                        build(
                            job: "POD-CD-Pipeline-AWS", 
                            parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                        )
                    }
                }
            }
        }
    }
    post {
      failure {
        updateGitlabCommitStatus name: 'build', state: 'failed'
      }
      success {
        updateGitlabCommitStatus name: 'build', state: 'success'
      }
      aborted {
        updateGitlabCommitStatus name: 'build', state: 'canceled'
      }
    }
}